{"version":3,"sources":["components/MoviesList/MoviesList.module.css","components/MovieCard/MovieCard.module.css","views/MovieDetailsPage/MovieDetailsPage.module.css","components/MoviesList/MoviesList.js","image/default_movie_img.jpg","components/MovieCard/MovieCard.js","components/AdditionalInform/AdditionalInform.js","components/Button/Button.js","views/MovieDetailsPage/MovieDetailsPage.js","views/MoviesPage/MoviesPage.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","views/MoviesPage/MoviesPage.js"],"names":["module","exports","MoviesList","movies","console","log","location","useLocation","className","s","list","map","movie","listItem","to","pathname","id","state","from","title","name","prototype","PropTypes","array","isRequired","MovieCard","poster_path","release_date","vote_average","overview","genres","imgurl","container","img","src","alt","height","width","defaultImg","description","split","object","Cast","lazy","Reviews","AdditionalInform","path","url","fallback","Spinner","Button","onGoDack","type","onClick","string","func","MovieDetailsPage","useState","setMovie","error","setError","spinner","setSpinner","history","useHistory","movieId","useParams","useRouteMatch","useEffect","API","fetchMovieDetails","then","film","catch","finally","success","message","push","Searchbar","onSubmit","query","setQuery","SearchForm","e","preventDefault","trim","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","SearchFormInput","value","autoComplete","onChange","currentTarget","toLowerCase","SearchFormButton","SearchFormButtonLabel","MoviesPage","search","getQuery","URLSearchParams","get","queryurl","setMovies","fetchMovies","results"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,SAAW,+B,mBCA7BD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,IAAM,uBAAuB,YAAc,iC,mBCAtGD,EAAOC,QAAU,CAAC,UAAY,sC,6HCG9B,SAASC,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OACpBC,QAAQC,IAAIF,GACZ,IAAMG,EAAWC,cAGjB,OAFAH,QAAQC,IAAIC,GAGV,mCACGH,GACC,oBAAIK,UAAWC,IAAEC,KAAjB,SACGP,EAAOQ,KAAI,SAACC,GAAD,OACV,oBAAmBJ,UAAWC,IAAEI,SAAhC,SACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaH,EAAMI,IAC3BC,MAAO,CAAEC,KAAMZ,IAEjBE,UAAWC,IAAEI,SALf,SAOGD,EAAMO,MAAQP,EAAMO,MAAQP,EAAMQ,QAR9BR,EAAMI,WAkBZd,QAEfA,EAAWmB,UAAY,CACrBlB,OAAQmB,IAAUC,MAAMC,a,kJCnCX,MAA0B,8C,OCIzC,SAASC,EAAT,GAA+B,IAAVb,EAAS,EAATA,MACXc,EACNd,EADMc,YAAaP,EACnBP,EADmBO,MAAOQ,EAC1Bf,EAD0Be,aAAcC,EACxChB,EADwCgB,aAAcC,EACtDjB,EADsDiB,SAAUC,EAChElB,EADgEkB,OAElE1B,QAAQC,IAAR,UAAeqB,IAEf,IAAMK,EAAM,yCAAqCL,GAEjD,OACE,sBAAKlB,UAAWC,IAAEuB,UAAlB,UACGN,EACC,qBACElB,UAAWC,IAAEwB,IACbC,IAAKH,EACLI,IAAKhB,EACLiB,OAAO,MACPC,MAAM,QAGR,qBACE7B,UAAWC,IAAEwB,IACbC,IAAKI,EACLH,IAAKhB,EACLiB,OAAO,MACPC,MAAM,QAIV,sBAAK7B,UAAWC,IAAE8B,YAAlB,UACE,+BACGpB,EADH,IACWQ,EAAeA,EAAaa,MAAM,KAAK,GAAK,GADvD,OAGA,6CAA+B,GAAfZ,EAAhB,OACA,0CACA,4BAAIC,IACJ,wCACA,6BACGC,GAAUA,EAAOnB,KAAI,gBAAGK,EAAH,EAAGA,GAAII,EAAP,EAAOA,KAAP,OAAkB,6BAAcA,GAALJ,cAO5CS,QAEfA,EAAUJ,UAAY,CACpBlB,OAAQmB,IAAUmB,OAAOjB,Y,oBC3CrBkB,EAAOC,gBAAK,kBAAM,gCAClBC,EAAUD,gBAAK,kBAAM,gCAE3B,SAASE,EAAT,GAA0C,IAAdC,EAAa,EAAbA,KAAMC,EAAO,EAAPA,IAIhC,OAHA3C,QAAQC,IAAI0C,GACZ3C,QAAQC,IAAIyC,GAGV,gCACE,wDACA,+BACE,6BACE,cAAC,IAAD,CAAShC,GAAE,UAAKiC,EAAL,SAAX,oBAEF,6BACE,cAAC,IAAD,CAASjC,GAAE,UAAKiC,EAAL,YAAX,0BAKJ,cAAC,WAAD,CAAUC,SAAU,cAACC,EAAA,EAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOH,KAAI,UAAKA,EAAL,SAAX,SACE,cAACJ,EAAD,MAEF,cAAC,IAAD,CAAOI,KAAI,UAAKA,EAAL,YAAX,SACE,cAACF,EAAD,cAQGC,QCtCA,SAASK,EAAT,GAAsC,IAApB/B,EAAmB,EAAnBA,MAAOgC,EAAY,EAAZA,SACtC,OACE,wBAAQC,KAAK,SAASC,QAASF,EAA/B,SACGhC,IDqCP0B,EAAiBxB,UAAY,CAC3ByB,KAAMxB,IAAUgC,OAAO9B,WACvBuB,IAAKzB,IAAUgC,OAAO9B,YClCxB0B,EAAO7B,UAAY,CACjBF,MAAOG,IAAUgC,OAAO9B,WACxB2B,SAAU7B,IAAUiC,KAAK/B,Y,qBC6DZgC,MA5Df,WACE,MAA0BC,mBAAS,IAAnC,mBAAO7C,EAAP,KAAc8C,EAAd,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAEMC,EAAUC,cAChB5D,QAAQC,IAAI0D,GAEZ,IAAMzD,EAAWC,cAGT0D,EAAYC,cAAZD,QACR7D,QAAQC,IAAI4D,GAEZ,MAAsBE,cAAdpB,EAAR,EAAQA,IAAKD,EAAb,EAAaA,KA6Bb,OA5BA1C,QAAQC,IAAI0C,GACZ3C,QAAQC,IAAIyC,GACZ1C,QAAQC,IAAI8D,eAOZC,qBAAU,WACRN,GAAW,GAEXO,IAAIC,kBAAkBL,GACnBM,MAAK,SAACC,GAAD,OAAUd,EAASc,MACxBC,OAAM,SAACd,GAAD,OAAWC,EAASD,MAC1Be,SAAQ,kBAAMZ,GAAW,QAC3B,CAACG,IAEJ7D,QAAQC,IAAIO,GACZR,QAAQC,IAAIsD,GAEZvD,QAAQC,IAAI,kBAAW4D,EAAX,qBAAiClB,EAAjC,UACZ3C,QAAQC,IAAR,UAAeyC,EAAf,UACA1C,QAAQC,IAAR,UAAe0C,EAAf,WAEsB,IAAlBnC,EAAM+D,SACRjB,EAAS,IAGT,qCACGC,GAASA,EAAMiB,QACff,GAAW,cAACZ,EAAA,EAAD,IACXrC,GACC,sBAAKJ,UAAWC,IAAEuB,UAAlB,UACE,cAACkB,EAAD,CAAQ/B,MAAM,UAAUgC,SA9Bf,WAAO,IAAD,IACrBY,EAAQc,KAAR,iBAAavE,QAAb,IAAaA,GAAb,UAAaA,EAAUW,aAAvB,aAAa,EAAiBC,YAA9B,QAAsC,QA8BhC,cAAC,EAAD,CAAWN,MAAOA,IAClB,cAAC,EAAD,CAAkBkC,KAAMA,EAAMC,IAAKA,OAIvC,4B,mBCpEN/C,EAAOC,QAAU,CAAC,UAAY,gC,mBCA9BD,EAAOC,QAAU,CAAC,gBAAkB,mCAAmC,iBAAmB,sC,kMCK1F,SAAS6E,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SACnB,EAA0BtB,mBAAS,IAAnC,mBAAOuB,EAAP,KAAcC,EAAd,KAOA7E,QAAQC,IAAI2E,GA4BZ,OACE,uBAAMxE,UAAWC,IAAEyE,WAAYH,SAfZ,SAACI,GAIpB,GAHAA,EAAEC,iBAGmB,KAAjBJ,EAAMK,OAER,OADAjF,QAAQC,IAAI,6EAhBdiF,YAAM,sBAAuB,CAC3BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAcZf,EAASC,GACTC,EAAS,KAIT,UACE,uBACEzE,UAAWC,IAAEsF,gBACb3C,KAAK,OACLhC,KAAK,SACL4E,MAAOhB,EACPiB,aAAa,MAEbC,SAzCe,SAACf,GACpBF,EAASE,EAAEgB,cAAcH,MAAMI,kBA2C7B,wBAAQhD,KAAK,SAAS5C,UAAWC,IAAE4F,iBAAnC,SACE,sBAAM7F,UAAWC,IAAE6F,sBAAnB,yBAMOxB,QAEfA,EAAUzD,UAAY,CACpB0D,SAAUzD,IAAUiC,KAAK/B,Y,0BCKZ+E,MAvDf,WACE,IAAMjG,EAAWC,cACjBH,QAAQC,IAAIC,EAASkG,QACrB,IAAMC,EAAW,IAAIC,gBAAgBpG,EAASkG,QAAQG,IAAI,SAC1DvG,QAAQC,IAAIoG,GAEZ,IAAMG,EAAwB,OAAbH,EAAoBA,EAAW,GAEhD,EAA0BhD,mBAASmD,GAAnC,mBAAO5B,EAAP,KAAcC,EAAd,KACA,EAA4BxB,mBAAS,IAArC,mBAAOtD,EAAP,KAAe0G,EAAf,KACA,EAA0BpD,mBAAS,IAAnC,mBAAcG,GAAd,WACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA1D,QAAQC,IAAI2E,GAEZ,IAAMjB,EAAUC,cAgChB,OA/BA5D,QAAQC,IAAI0D,GAUZK,qBAAU,WAEM,KAAVY,GAAiByB,GAMrBrG,QAAQC,IAAI2E,GAEZlB,GAAW,GAEXO,IAAIyC,YAAY9B,GACbT,MAAK,gBAAGwC,EAAH,EAAGA,QAAH,OAAiBF,EAAUE,MAChCtC,OAAM,SAACd,GAAD,OAAWC,EAASD,MAC1Be,SAAQ,kBAAMZ,GAAW,MAC5BC,EAAQc,KAAR,2BAAkBvE,GAAlB,IAA4BkG,OAAO,SAAD,OAAWxB,OAb3C5E,QAAQC,IAAI,+EAcb,CAACoG,EAAUzB,IAEd5E,QAAQC,IAAIF,GAGV,sBAAKK,UAAWC,IAAEuB,UAAlB,UACE,cAAC,EAAD,CAAW+C,SA9Bf,SAA0BC,GAExBC,EAASD,MA6BNnB,GAAW,cAACZ,EAAA,EAAD,IACX9C,IAAW0D,GAAW,cAAC3D,EAAA,EAAD,CAAYC,OAAQA","file":"static/js/3.ecd0cde3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"MoviesList_listItem__3YwUE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MovieCard_container__30ukc\",\"img\":\"MovieCard_img__1hQiG\",\"description\":\"MovieCard_description__38hMU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MovieDetailsPage_container__2RTKY\"};","import { NavLink, useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./MoviesList.module.css\";\r\n\r\nfunction MoviesList({ movies }) {\r\n  console.log(movies);\r\n  const location = useLocation();\r\n  console.log(location);\r\n\r\n  return (\r\n    <>\r\n      {movies && (\r\n        <ul className={s.list}>\r\n          {movies.map((movie) => (\r\n            <li key={movie.id} className={s.listItem}>\r\n              <NavLink\r\n                to={{\r\n                  pathname: `/movies/${movie.id}`,\r\n                  state: { from: location },\r\n                }}\r\n                className={s.listItem}\r\n              >\r\n                {movie.title ? movie.title : movie.name}\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviesList;\r\n\r\nMoviesList.prototype = {\r\n  movies: PropTypes.array.isRequired,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/default_movie_img.e4529e8b.jpg\";","import PropTypes from \"prop-types\";\r\nimport s from \"./MovieCard.module.css\";\r\nimport defaultImg from \"../../image/default_movie_img.jpg\";\r\n\r\nfunction MovieCard({ movie }) {\r\n  const { poster_path, title, release_date, vote_average, overview, genres } =\r\n    movie;\r\n  console.log(`${poster_path}`);\r\n\r\n  const imgurl = `https://image.tmdb.org/t/p/w500${poster_path}`;\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      {poster_path ? (\r\n        <img\r\n          className={s.img}\r\n          src={imgurl}\r\n          alt={title}\r\n          height=\"400\"\r\n          width=\"300\"\r\n        />\r\n      ) : (\r\n        <img\r\n          className={s.img}\r\n          src={defaultImg}\r\n          alt={title}\r\n          height=\"400\"\r\n          width=\"300\"\r\n        />\r\n      )}\r\n\r\n      <div className={s.description}>\r\n        <h2>\r\n          {title}({release_date ? release_date.split(\"-\")[0] : \"\"})\r\n        </h2>\r\n        <p>User Score: {vote_average * 10}%</p>\r\n        <h3>Overview</h3>\r\n        <p>{overview}</p>\r\n        <h3>Genres</h3>\r\n        <ul>\r\n          {genres && genres.map(({ id, name }) => <li key={id}>{name}</li>)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieCard;\r\n\r\nMovieCard.prototype = {\r\n  movies: PropTypes.object.isRequired,\r\n};\r\n","// import { useParams } from \"react-router-dom\";\r\nimport { lazy, Suspense } from \"react\";\r\nimport { Switch, NavLink, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"../Spinner\";\r\n\r\n// Динамичкский импорт\r\nconst Cast = lazy(() => import(\"../../views/Cast\"));\r\nconst Reviews = lazy(() => import(\"../../views/Reviews\"));\r\n\r\nfunction AdditionalInform({ path, url }) {\r\n  console.log(url);\r\n  console.log(path);\r\n\r\n  return (\r\n    <div>\r\n      <h4>Additional information</h4>\r\n      <ul>\r\n        <li>\r\n          <NavLink to={`${url}/cast`}>Cast</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to={`${url}/reviews`}>Reviews</NavLink>\r\n        </li>\r\n      </ul>\r\n      {/* Если делать вложеный маршрут согласно тз, то Route для компонентов Cast и\r\n      Reviews не срабатывает и по умолчанию перенаправляет на HomePage */}\r\n      <Suspense fallback={<Spinner />}>\r\n        <Switch>\r\n          <Route path={`${path}/cast`}>\r\n            <Cast />\r\n          </Route>\r\n          <Route path={`${path}/reviews`}>\r\n            <Reviews />\r\n          </Route>\r\n        </Switch>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdditionalInform;\r\n\r\nAdditionalInform.prototype = {\r\n  path: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n// import s from \"./Button.module.css\";\r\n\r\nexport default function Button({ title, onGoDack }) {\r\n  return (\r\n    <button type=\"button\" onClick={onGoDack}>\r\n      {title}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  onGoDack: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  useHistory,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport API from \"../../services/movies-api\";\r\nimport MovieCard from \"../../components/MovieCard\";\r\nimport AdditionalInform from \"../../components/AdditionalInform\";\r\nimport Button from \"../../components/Button\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport s from \"./MovieDetailsPage.module.css\";\r\n\r\nfunction MovieDetailsPage() {\r\n  const [movie, setMovie] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [spinner, setSpinner] = useState(false);\r\n\r\n  const history = useHistory();\r\n  console.log(history);\r\n\r\n  const location = useLocation();\r\n  // console.log(location.state.from);\r\n\r\n  const { movieId } = useParams();\r\n  console.log(movieId);\r\n\r\n  const { url, path } = useRouteMatch();\r\n  console.log(url);\r\n  console.log(path);\r\n  console.log(useRouteMatch());\r\n\r\n  const onGoDack = () => {\r\n    history.push(location?.state?.from ?? \"/\");\r\n    // history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSpinner(true);\r\n\r\n    API.fetchMovieDetails(movieId)\r\n      .then((film) => setMovie(film))\r\n      .catch((error) => setError(error))\r\n      .finally(() => setSpinner(false));\r\n  }, [movieId]);\r\n\r\n  console.log(movie);\r\n  console.log(error);\r\n\r\n  console.log(`/movies/${movieId}/cast` === `${url}/cast`);\r\n  console.log(`${path}/cast`);\r\n  console.log(`${url}/cast`);\r\n\r\n  if (movie.success === false) {\r\n    setMovie(\"\");\r\n  }\r\n  return (\r\n    <>\r\n      {error && error.message}\r\n      {spinner && <Spinner />}\r\n      {movie && (\r\n        <div className={s.container}>\r\n          <Button title=\"Go back\" onGoDack={onGoDack} />\r\n          <MovieCard movie={movie} />\r\n          <AdditionalInform path={path} url={url} />\r\n        </div>\r\n      )}\r\n      {/* {!movie && !spinner && \"No movie description.\"} */}\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MoviesPage_container__1Gl_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchFormInput\":\"Searchbar_SearchFormInput__3RgKO\",\"SearchFormButton\":\"Searchbar_SearchFormButton__XKy5e\"};","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Searchbar.module.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  // Контролируем изминения запроса в инпуте и делаем нечуствительным к регистру (приводим к нижнему регистру)\r\n  const handleChange = (e) => {\r\n    setQuery(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  console.log(query);\r\n\r\n  const notify = () =>\r\n    toast(\"Enter your request!\", {\r\n      position: \"top-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n  //   // Сабмит формы (запрос пользователя по поиску)\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Если пустая строка запрос не передаем\r\n    if (query.trim() === \"\") {\r\n      console.log(\"Пустая строка\");\r\n      return notify();\r\n    }\r\n\r\n    // Передаем результат запроса\r\n    onSubmit(query);\r\n    setQuery(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n      <input\r\n        className={s.SearchFormInput}\r\n        type=\"text\"\r\n        name=\"search\"\r\n        value={query}\r\n        autoComplete=\"off\"\r\n        // autoFocus\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <button type=\"submit\" className={s.SearchFormButton}>\r\n        <span className={s.SearchFormButtonLabel}>Search</span>\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Searchbar;\r\n\r\nSearchbar.prototype = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-unused-expressions */\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./MoviesPage.module.css\";\r\nimport API from \"../../services/movies-api\";\r\nimport Searchbar from \"../../components/Searchbar\";\r\nimport MoviesList from \"../../components/MoviesList\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nimport MovieDetailsPage from \"../MovieDetailsPage\";\r\n\r\nfunction MoviesPage() {\r\n  const location = useLocation();\r\n  console.log(location.search);\r\n  const getQuery = new URLSearchParams(location.search).get(\"query\");\r\n  console.log(getQuery);\r\n\r\n  const queryurl = getQuery !== null ? getQuery : \"\";\r\n\r\n  const [query, setQuery] = useState(queryurl);\r\n  const [movies, setMovies] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [spinner, setSpinner] = useState(false);\r\n  console.log(query);\r\n\r\n  const history = useHistory();\r\n  console.log(history);\r\n\r\n  // Запрос пользователя по поиску\r\n  function handleFormSubmit(query) {\r\n    // console.log(query);\r\n    setQuery(query);\r\n  }\r\n\r\n  // const notify = () => toast(\"Enter your request!\");\r\n  // Запрос пользователя по поиску\r\n  useEffect(() => {\r\n    // Если пустая строка запрос не делаем\r\n    if (query === \"\" && !getQuery) {\r\n      console.log(\"Пустая строка\");\r\n\r\n      return;\r\n    }\r\n\r\n    console.log(query);\r\n\r\n    setSpinner(true);\r\n\r\n    API.fetchMovies(query)\r\n      .then(({ results }) => setMovies(results))\r\n      .catch((error) => setError(error))\r\n      .finally(() => setSpinner(false));\r\n    history.push({ ...location, search: `query=${query}` });\r\n  }, [getQuery, query]);\r\n\r\n  console.log(movies);\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <Searchbar onSubmit={handleFormSubmit} />\r\n      {spinner && <Spinner />}\r\n      {movies && !spinner && <MoviesList movies={movies} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}