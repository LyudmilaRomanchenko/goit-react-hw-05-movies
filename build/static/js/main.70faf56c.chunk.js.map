{"version":3,"sources":["components/Navigation/Navigation.module.css","components/Searchbar/Searchbar.module.css","components/MoviesList/MoviesList.module.css","components/MovieCard/MovieCard.module.css","views/Cast/Cast.module.css","components/Container/Container.module.css","components/AppBar/AppBar.module.css","views/HomePage/HomePage.module.css","views/MoviesPage/MoviesPage.module.css","views/MovieDetailsPage/MovieDetailsPage.module.css","components/Container/Container.js","components/Navigation/Navigation.js","components/AppBar/AppBar.js","components/MoviesList/MoviesList.js","services/movies-api.js","views/HomePage/HomePage.js","components/Searchbar/Searchbar.js","views/MoviesPage/MoviesPage.js","components/MovieCard/MovieCard.js","views/Cast/Cast.js","views/Reviews/Reviews.js","components/AdditionalInform/AdditionalInform.js","components/Button/Button.js","views/MovieDetailsPage/MovieDetailsPage.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Navigation","nav","exact","to","link","activeClassName","activeLink","Appbar","styles","header","MoviesList","movies","console","log","location","useLocation","list","map","movie","listItem","pathname","id","state","from","title","name","API_KEY","BASE_URL","urlTrending","a","fetch","response","json","query","urlMovies","movieId","urlMovieDetails","urlMovieCredits","urlMovieReviews","apiMovies","fetchTrending","fetchMovies","fetchMovieDetails","fetchMovieCredits","fetchMovieReviews","HomePage","useState","setMovies","setError","useEffect","API","then","results","catch","error","Searchbar","onSubmit","setQuery","SearchForm","e","preventDefault","trim","SearchFormInput","type","value","autoComplete","onChange","currentTarget","toLowerCase","SearchFormButton","SearchFormButtonLabel","MoviesPage","history","useHistory","search","getQuery","URLSearchParams","get","push","MovieCard","poster_path","release_date","vote_average","overview","genres","imgurl","img","src","alt","description","split","Cast","useParams","ackers","setAckers","cast","character","profile_path","item","Reviews","reviews","setReviews","author","content","AdditionalInform","path","url","Button","onGoDack","onClick","MovieDetailsPage","setMovie","useRouteMatch","film","success","App","d","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70faf56c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__2rvYr\",\"activeLink\":\"Navigation_activeLink__1h_CJ\",\"nav\":\"Navigation_nav__2rMWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchFormInput\":\"Searchbar_SearchFormInput__3RgKO\",\"SearchFormButton\":\"Searchbar_SearchFormButton__XKy5e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"MoviesList_listItem__3YwUE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MovieCard_container__30ukc\",\"img\":\"MovieCard_img__1hQiG\",\"description\":\"MovieCard_description__38hMU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Cast_img__P5C6O\",\"item\":\"Cast_item__720iQ\",\"description\":\"Cast_description__3i4PU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__ienhj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2SQ7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"HomePage_title__SSVdJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MoviesPage_container__1Gl_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MovieDetailsPage_container__2RTKY\"};","import s from \"./Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./Navigation.module.css\";\r\n\r\nconst Navigation = () => (\r\n  <nav className={s.nav}>\r\n    <NavLink exact to=\"/\" className={s.link} activeClassName={s.activeLink}>\r\n      Home\r\n    </NavLink>\r\n\r\n    <NavLink to=\"/movies\" className={s.link} activeClassName={s.activeLink}>\r\n      Movies\r\n    </NavLink>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import Navigation from \"../Navigation/Navigation\";\r\nimport styles from \"./AppBar.module.css\";\r\n\r\nexport default function Appbar() {\r\n  return (\r\n    <header className={styles.header}>\r\n      <Navigation />\r\n    </header>\r\n  );\r\n}\r\n","import { NavLink, useLocation } from \"react-router-dom\";\r\nimport s from \"./MoviesList.module.css\";\r\n\r\nfunction MoviesList({ movies }) {\r\n  console.log(movies);\r\n  const location = useLocation();\r\n  console.log(location);\r\n  return (\r\n    <>\r\n      {movies && (\r\n        <ul className={s.list}>\r\n          {movies.map((movie) => (\r\n            <li key={movie.id} className={s.listItem}>\r\n              <NavLink\r\n                to={{\r\n                  pathname: `/movies/${movie.id}`,\r\n                  state: { from: location },\r\n                }}\r\n                className={s.listItem}\r\n              >\r\n                {movie.title ? movie.title : movie.name}\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviesList;\r\n","const API_KEY = \"cdc3559cea174c9b75b98956c9a389b5\";\r\nconst BASE_URL = \"https://api.themoviedb.org\";\r\n\r\n// https://developers.themoviedb.org/3/trending/get-trending - список самых популярных фильмов на сегодня для создания коллекции на главной странице.\r\n// https://developers.themoviedb.org/3/search/search-movies - поиск кинофильма по ключевому слову на странице фильмов.\r\n// https://developers.themoviedb.org/3/movies/get-movie-details - запрос полной информации о фильме для страницы кинофильма.\r\n// https://developers.themoviedb.org/3/movies/get-movie-credits - запрос информации о актёрском составе для страницы кинофильма.\r\n// https://developers.themoviedb.org/3/movies/get-movie-reviews - запрос обзоров для страницы кинофильма.\r\n\r\n// const cat = \"cat\";\r\n// const movieId = \"10588\";\r\n\r\nconst urlTrending = `${BASE_URL}/3/trending/all/day?api_key=${API_KEY}`;\r\n// const urlMovies = `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${cat}&page=1&include_adult=false`;\r\n// const urlMovieDetails = `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\r\n// const urlMovieCredits = `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\r\n// const urlMovieReviews = `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\r\n\r\n// список самых популярных фильмов на сегодня для создания коллекции на главной странице\r\nasync function fetchTrending() {\r\n  const response = await fetch(urlTrending);\r\n  //   console.log(response.json());\r\n  return await response.json();\r\n}\r\n\r\n// поиск кинофильма по ключевому слову на странице фильмов\r\nasync function fetchMovies(query) {\r\n  const urlMovies = `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\r\n  const response = await fetch(urlMovies);\r\n  //   console.log(response.json());\r\n  return await response.json();\r\n}\r\n\r\n//запрос полной информации о фильме для страницы кинофильма\r\nasync function fetchMovieDetails(movieId) {\r\n  const urlMovieDetails = `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\r\n  const response = await fetch(urlMovieDetails);\r\n  //   console.log(response.json());\r\n  return await response.json();\r\n}\r\n\r\n//запрос информации о актёрском составе для страницы кинофильма\r\nasync function fetchMovieCredits(movieId) {\r\n  const urlMovieCredits = `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\r\n  const response = await fetch(urlMovieCredits);\r\n  //   console.log(response.json());\r\n  return await response.json();\r\n}\r\n\r\n// запрос обзоров для страницы кинофильма\r\nasync function fetchMovieReviews(movieId) {\r\n  const urlMovieReviews = `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\r\n  const response = await fetch(urlMovieReviews);\r\n  //   console.log(response.json());\r\n  return await response.json();\r\n}\r\n\r\nconst apiMovies = {\r\n  fetchTrending,\r\n  fetchMovies,\r\n  fetchMovieDetails,\r\n  fetchMovieCredits,\r\n  fetchMovieReviews,\r\n};\r\n\r\nexport default apiMovies;\r\n","import { useState, useEffect } from \"react\";\r\nimport { NavLink, Route, useRouteMatch } from \"react-router-dom\";\r\nimport MoviesList from \"../../components/MoviesList\";\r\nimport API from \"../../services/movies-api\";\r\nimport s from \"./HomePage.module.css\";\r\n\r\nfunction HomePage() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    API.fetchTrending()\r\n      .then(({ results }) => setMovies(results))\r\n      .catch((error) => setError(error));\r\n  }, []);\r\n\r\n  console.log(movies);\r\n\r\n  return (\r\n    <div>\r\n      {movies && (\r\n        <>\r\n          <h2 className={s.title}>Trending today</h2>\r\n          <MoviesList movies={movies} />\r\n        </>\r\n      )}\r\n\r\n      {/* {error && } */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Searchbar.module.css\";\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  // Контролируем изминения запроса в инпуте и делаем нечуствительным к регистру (приводим к нижнему регистру)\r\n  const handleChange = (e) => {\r\n    setQuery(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  console.log(query);\r\n\r\n  //   // Сабмит формы (запрос пользователя по поиску)\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Если пустая строка запрос не передаем\r\n    if (query.trim() === \"\") {\r\n      console.log(\"Пустая строка\");\r\n      return;\r\n    }\r\n\r\n    // Передаем результат запроса\r\n    onSubmit(query);\r\n    setQuery(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n      <input\r\n        className={s.SearchFormInput}\r\n        type=\"text\"\r\n        name=\"search\"\r\n        value={query}\r\n        autoComplete=\"off\"\r\n        // autoFocus\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <button type=\"submit\" className={s.SearchFormButton}>\r\n        <span className={s.SearchFormButtonLabel}>Search</span>\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Searchbar;\r\n\r\n// Searchbar.prototype = {\r\n//   onSubmit: PropTypes.func.isRequired,\r\n// };\r\n","import { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./MoviesPage.module.css\";\r\nimport API from \"../../services/movies-api\";\r\nimport Searchbar from \"../../components/Searchbar\";\r\nimport MoviesList from \"../../components/MoviesList\";\r\n\r\nfunction MoviesPage() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n  console.log(history);\r\n\r\n  const location = useLocation();\r\n  console.log(location.search);\r\n\r\n  const getQuery = new URLSearchParams(location.search).get(\"query\");\r\n  console.log(getQuery);\r\n  // if (getQuery) {\r\n  //   setQuery(getQuery);\r\n  // }\r\n\r\n  // Запрос пользователя по поиску\r\n  const handleFormSubmit = (query) => {\r\n    // console.log(query);\r\n\r\n    // history.push({ ...location, search: `query=${query}` });\r\n    setQuery(query);\r\n  };\r\n\r\n  // Запрос пользователя по поиску\r\n  useEffect(() => {\r\n    // Если пустая строка запрос не делаем\r\n    if (query === \"\" && !getQuery) {\r\n      console.log(\"Пустая строка\");\r\n      return;\r\n    }\r\n    console.log(query);\r\n\r\n    if (getQuery) {\r\n      setQuery(getQuery);\r\n    }\r\n\r\n    API.fetchMovies(query)\r\n      .then(({ results }) => setMovies(results))\r\n      .catch((error) => setError(error));\r\n\r\n    history.push({ ...location, search: `query=${query}` });\r\n  }, [query, getQuery]);\r\n\r\n  console.log(movies);\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <Searchbar onSubmit={handleFormSubmit} />\r\n      {movies && <MoviesList movies={movies} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoviesPage;\r\n","import s from \"./MovieCard.module.css\";\r\n\r\nfunction MovieCard({ movie }) {\r\n  const { poster_path, title, release_date, vote_average, overview, genres } =\r\n    movie;\r\n  console.log(movie);\r\n\r\n  const imgurl = `https://image.tmdb.org/t/p/w500${poster_path}`;\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <img className={s.img} src={imgurl} alt={title} />\r\n      <div className={s.description}>\r\n        <h2>\r\n          {title}({release_date ? release_date.split(\"-\")[0] : \"\"})\r\n        </h2>\r\n        <p>User Score: {vote_average * 10}%</p>\r\n        <h3>Overview</h3>\r\n        <p>{overview}</p>\r\n        <h3>Genres</h3>\r\n        <ul>\r\n          {genres && genres.map(({ id, name }) => <li key={id}>{name}</li>)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieCard;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport API from \"../../services/movies-api\";\r\nimport s from \"./Cast.module.css\";\r\n\r\nfunction Cast() {\r\n  const { movieId } = useParams();\r\n  console.log(movieId);\r\n\r\n  console.log(movieId);\r\n  const [ackers, setAckers] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    API.fetchMovieCredits(movieId)\r\n      .then((ackers) => setAckers(ackers))\r\n      .catch((error) => setError(error));\r\n  }, [movieId]);\r\n\r\n  console.log(ackers);\r\n\r\n  const { cast } = ackers;\r\n  console.log(cast);\r\n\r\n  const imgurl = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n  return (\r\n    <div>\r\n      {cast && (\r\n        <ul>\r\n          {cast.map(({ id, name, character, profile_path }) => (\r\n            <li className={s.item} key={id}>\r\n              <img\r\n                className={s.img}\r\n                src={`${imgurl}${profile_path}`}\r\n                alt={name}\r\n              />\r\n              <p className={s.description}>\r\n                <p>{name}</p>\r\n                <p>Character: {character}</p>\r\n              </p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cast;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport API from \"../../services/movies-api\";\r\n\r\nfunction Reviews() {\r\n  const { movieId } = useParams();\r\n  console.log(movieId);\r\n\r\n  console.log(movieId);\r\n  const [reviews, setReviews] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    API.fetchMovieReviews(movieId)\r\n      .then((reviews) => setReviews(reviews))\r\n      .catch((error) => setError(error));\r\n  }, [movieId]);\r\n\r\n  console.log(reviews);\r\n\r\n  const { results } = reviews;\r\n  console.log(results);\r\n\r\n  return (\r\n    <div>\r\n      {reviews && (\r\n        <ul>\r\n          {results.map(({ id, author, content }) => (\r\n            <li key={id}>\r\n              <h4>Author: {author}</h4>\r\n              <p>{content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {!reviews && <h3>We don't have any reviews for this movie.</h3>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reviews;\r\n","// import { useParams } from \"react-router-dom\";\r\nimport { Switch, NavLink, Route } from \"react-router-dom\";\r\nimport Cast from \"../../views/Cast\";\r\nimport Reviews from \"../../views/Reviews\";\r\n\r\nfunction AdditionalInform({ path, url }) {\r\n  console.log(url);\r\n  console.log(path);\r\n\r\n  return (\r\n    <div>\r\n      <h4>Additional information</h4>\r\n      <ul>\r\n        <li>\r\n          <NavLink to={`${url}/cast`}>Cast</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to={`${url}/reviews`}>Reviews</NavLink>\r\n        </li>\r\n      </ul>\r\n      <Route path={`${path}/cast`}>\r\n        <Cast />\r\n      </Route>\r\n\r\n      <Route path={`${path}/reviews`}>\r\n        <Reviews />\r\n      </Route>\r\n\r\n      {/* <Switch> */}\r\n      {/* <Route path={`${path}/cast`}>\r\n        <Cast />\r\n      </Route>\r\n\r\n      <Route path={`${path}/reviews`}>\r\n        <Reviews />\r\n      </Route> */}\r\n      {/* </Switch> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdditionalInform;\r\n\r\n// ////////////////\r\n// export default function MoviesDetailsPage() {\r\n//   const { movieId } = useParams();\r\n//   const history = useHistory();\r\n//   const { url, path } = useRouteMatch();\r\n\r\n//   const [movie, setMovie] = useState(null);\r\n//   const [loader, setLoader] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     async function getDetailsPage() {\r\n//       try {\r\n//         setLoader(true);\r\n//         const movie = await fetchDetails(movieId);\r\n//         setMovie({ ...movie });\r\n//       } catch (error) {\r\n//         toast.error(error.message, { theme: 'colored' });\r\n//       } finally {\r\n//         setLoader(false);\r\n//       }\r\n//     }\r\n//     getDetailsPage();\r\n//   }, [movieId]);\r\n\r\n//   return (\r\n//     <>\r\n//       {loader && (\r\n//         <Loader\r\n//           type=\"ThreeDots\"\r\n//           color=\"#00BFFF\"\r\n//           height={80}\r\n//           width={80}\r\n//           timeout={3000}\r\n//           style={{ textAlign: 'center' }}\r\n//         />\r\n//       )}\r\n//       <button></button>\r\n//       {movie && (\r\n//         <MovieInfo\r\n//           title={movie.title}\r\n//           poster={movie.poster_path}\r\n//           overview={movie.overview}\r\n//           releaseDate={movie.release_date || ' '}\r\n//           popularity={movie.popularity}\r\n//           vote={movie.vote_average}\r\n//           genres={movie.genres.map(genre => genre.name).join(', ')}\r\n//         />\r\n//       )}\r\n\r\n//       <ul>\r\n//         <li>\r\n//           <Link to={`${url}/cast`}>\r\n//             <h3>Cast</h3>\r\n//           </Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={`${url}/reviews`}>\r\n//             <h3>Reviews</h3>\r\n//           </Link>\r\n//         </li>\r\n//       </ul>\r\n//       <Route path={`${path}/cast`}>\r\n//         <Cast />\r\n//       </Route>\r\n//       <Route path={`${path}/reviews`}>\r\n//         <Reviews />\r\n//       </Route>\r\n//     </>\r\n//   );\r\n// }\r\n","import s from \"./Button.module.css\";\r\n\r\nexport default function Button({ title, onGoDack }) {\r\n  return (\r\n    <button type=\"button\" onClick={onGoDack}>\r\n      {title}\r\n    </button>\r\n  );\r\n}\r\n","/* eslint-disable jsx-a11y/heading-has-content */\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n// import { Switch, NavLink, Link, Route, useRouteMatch } from \"react-router-dom\";\r\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\r\n// import { NavLink, Route, useRouteMatch } from \"react-router-dom\";\r\nimport API from \"../../services/movies-api\";\r\nimport MovieCard from \"../../components/MovieCard\";\r\n// import Cast from \"../Cast\";\r\n// import Reviews from \"../Reviews\";\r\nimport AdditionalInform from \"../../components/AdditionalInform\";\r\nimport Button from \"../../components/Button\";\r\nimport s from \"./MovieDetailsPage.module.css\";\r\n\r\nfunction MovieDetailsPage() {\r\n  const [movie, setMovie] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n  console.log(history);\r\n\r\n  const location = useLocation();\r\n  console.log(location.state.from);\r\n\r\n  const { movieId } = useParams();\r\n  console.log(movieId);\r\n\r\n  const { url, path } = useRouteMatch();\r\n  console.log(url);\r\n  console.log(path);\r\n  console.log(useRouteMatch());\r\n\r\n  const onGoDack = () => {\r\n    history.push(location?.state?.from ?? \"/\");\r\n    // history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    API.fetchMovieDetails(movieId)\r\n      .then((film) => setMovie(film))\r\n      .catch((error) => setError(error));\r\n  }, [movieId]);\r\n\r\n  console.log(movie);\r\n  console.log(error);\r\n\r\n  console.log(`/movies/${movieId}/cast` === `${url}/cast`);\r\n  console.log(`${path}/cast`);\r\n  console.log(`${url}/cast`);\r\n\r\n  if (movie.success === false) {\r\n    setMovie(\"\");\r\n  }\r\n  return (\r\n    <>\r\n      {movie ? (\r\n        <div className={s.container}>\r\n          <Button title=\"Go back\" onGoDack={onGoDack} />\r\n          <MovieCard movie={movie} />\r\n          <AdditionalInform path={path} url={url} />\r\n        </div>\r\n      ) : (\r\n        \"No movie description.\"\r\n      )}\r\n\r\n      {/* {movie.status_message && movie.status_message} */}\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n\r\n////////////////\r\n// export default function MoviesDetailsPage() {\r\n//   const { movieId } = useParams();\r\n//   const history = useHistory();\r\n//   const { url, path } = useRouteMatch();\r\n\r\n//   const [movie, setMovie] = useState(null);\r\n//   const [loader, setLoader] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     async function getDetailsPage() {\r\n//       try {\r\n//         setLoader(true);\r\n//         const movie = await fetchDetails(movieId);\r\n//         setMovie({ ...movie });\r\n//       } catch (error) {\r\n//         toast.error(error.message, { theme: 'colored' });\r\n//       } finally {\r\n//         setLoader(false);\r\n//       }\r\n//     }\r\n//     getDetailsPage();\r\n//   }, [movieId]);\r\n\r\n//   return (\r\n//     <>\r\n//       {loader && (\r\n//         <Loader\r\n//           type=\"ThreeDots\"\r\n//           color=\"#00BFFF\"\r\n//           height={80}\r\n//           width={80}\r\n//           timeout={3000}\r\n//           style={{ textAlign: 'center' }}\r\n//         />\r\n//       )}\r\n//       <button></button>\r\n//       {movie && (\r\n//         <MovieInfo\r\n//           title={movie.title}\r\n//           poster={movie.poster_path}\r\n//           overview={movie.overview}\r\n//           releaseDate={movie.release_date || ' '}\r\n//           popularity={movie.popularity}\r\n//           vote={movie.vote_average}\r\n//           genres={movie.genres.map(genre => genre.name).join(', ')}\r\n//         />\r\n//       )}\r\n\r\n//       <ul>\r\n//         <li>\r\n//           <Link to={`${url}/cast`}>\r\n//             <h3>Cast</h3>\r\n//           </Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={`${url}/reviews`}>\r\n//             <h3>Reviews</h3>\r\n//           </Link>\r\n//         </li>\r\n//       </ul>\r\n//       <Route path={`${path}/cast`}>\r\n//         <Cast />\r\n//       </Route>\r\n//       <Route path={`${path}/reviews`}>\r\n//         <Reviews />\r\n//       </Route>\r\n//     </>\r\n//   );\r\n// }\r\n","import { Switch, Route } from \"react-router-dom\";\r\nimport Container from \"./components/Container/Container\";\r\nimport AppBar from \"./components/AppBar\";\r\nimport HomePage from \"./views/HomePage\";\r\nimport MoviesPage from \"./views/MoviesPage\";\r\nimport MovieDetailsPage from \"./views/MovieDetailsPage\";\r\nimport Cast from \"./views/Cast\";\r\nimport Reviews from \"./views/Reviews\";\r\nimport API from \"./services/movies-api\";\r\n\r\nimport \"./App.css\";\r\n\r\n//cdc3559cea174c9b75b98956c9a389b5\r\n\r\n// https://developers.themoviedb.org/3/trending/get-trending - список самых популярных фильмов на сегодня для создания коллекции на главной странице.\r\n// https://developers.themoviedb.org/3/search/search-movies - поиск кинофильма по ключевому слову на странице фильмов.\r\n// https://developers.themoviedb.org/3/movies/get-movie-details - запрос полной информации о фильме для страницы кинофильма.\r\n// https://developers.themoviedb.org/3/movies/get-movie-credits - запрос информации о актёрском составе для страницы кинофильма.\r\n// https://developers.themoviedb.org/3/movies/get-movie-reviews - запрос обзоров для страницы кинофильма.\r\n\r\n// const BASE_URL = \"https://developers.themoviedb.org\";\r\n\r\nfunction App() {\r\n  console.log(\r\n    API.fetchTrending()\r\n      .then((a) => a)\r\n      .then((d) => d)\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <AppBar />\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <HomePage />\r\n        </Route>\r\n\r\n        <Route path=\"/movies\" exact>\r\n          <MoviesPage />\r\n        </Route>\r\n\r\n        <Route path=\"/movies/:movieId\" exact>\r\n          <MovieDetailsPage />\r\n        </Route>\r\n\r\n        <Route path=\"/movies/:movieId/cast\">\r\n          <Cast />\r\n        </Route>\r\n\r\n        <Route path=\"/movies/:movieId/reviews\">\r\n          <Reviews />\r\n        </Route>\r\n\r\n        {/* <Route>\r\n          <HomePage />\r\n        </Route> */}\r\n      </Switch>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}