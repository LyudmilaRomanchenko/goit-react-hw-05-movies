{"version":3,"sources":["views/Reviews/Reviews.js"],"names":["Reviews","movieId","useParams","console","log","useState","reviews","setReviews","setError","spinner","setSpinner","useEffect","API","fetchMovieReviews","then","catch","error","finally","results","Spinner","map","id","author","content"],"mappings":"+OAiDeA,MA5Cf,WACE,IAAQC,EAAYC,cAAZD,QACRE,QAAQC,IAAIH,GAEZE,QAAQC,IAAIH,GACZ,MAA8BI,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,IAAnC,mBAAcG,GAAd,WACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRD,GAAW,GAEXE,IAAIC,kBAAkBZ,GACnBa,MAAK,SAACR,GAAD,OAAaC,EAAWD,MAC7BS,OAAM,SAACC,GAAD,OAAWR,EAASQ,MAC1BC,SAAQ,kBAAMP,GAAW,QAC3B,CAACT,IAEJE,QAAQC,IAAIE,GAEZ,IAAQY,EAAYZ,EAAZY,QAGR,OAFAf,QAAQC,IAAIc,GAGV,gCACGT,GAAW,cAACU,EAAA,EAAD,IACXb,GACC,6BACGY,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,+BACE,0CAAaD,KACb,4BAAIC,MAFGF,SAQbf,IAAYG,GACZ","file":"static/js/9.f6cd53a5.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport API from \"../../services/movies-api\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nfunction Reviews() {\r\n  const { movieId } = useParams();\r\n  console.log(movieId);\r\n\r\n  console.log(movieId);\r\n  const [reviews, setReviews] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [spinner, setSpinner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setSpinner(true);\r\n\r\n    API.fetchMovieReviews(movieId)\r\n      .then((reviews) => setReviews(reviews))\r\n      .catch((error) => setError(error))\r\n      .finally(() => setSpinner(false));\r\n  }, [movieId]);\r\n\r\n  console.log(reviews);\r\n\r\n  const { results } = reviews;\r\n  console.log(results);\r\n\r\n  return (\r\n    <div>\r\n      {spinner && <Spinner />}\r\n      {reviews && (\r\n        <ul>\r\n          {results.map(({ id, author, content }) => (\r\n            <li key={id}>\r\n              <h4>Author: {author}</h4>\r\n              <p>{content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {!reviews && !spinner && (\r\n        <h3>We don't have any reviews for this movie.</h3>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reviews;\r\n"],"sourceRoot":""}