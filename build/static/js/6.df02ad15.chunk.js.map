{"version":3,"sources":["views/Cast/Cast.module.css","image/default_img1.jpg","views/Cast/Cast.js"],"names":["module","exports","Cast","movieId","useParams","console","log","useState","ackers","setAckers","error","setError","spinner","setSpinner","useEffect","API","fetchMovieCredits","then","catch","finally","cast","Spinner","map","id","name","character","profile_path","className","s","item","img","src","alt","defaultImg","description"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,IAAM,kBAAkB,KAAO,mBAAmB,YAAc,4B,0ICDnE,MAA0B,yC,OC6D1BC,MAtDf,WACE,IAAQC,EAAYC,cAAZD,QACRE,QAAQC,IAAIH,GAEZE,QAAQC,IAAIH,GACZ,MAA4BI,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACAR,QAAQC,IAAII,GAEZI,qBAAU,WACRD,GAAW,GAEXE,IAAIC,kBAAkBb,GACnBc,MAAK,SAACT,GAAD,OAAYC,EAAUD,MAC3BU,OAAM,SAACR,GAAD,OAAWC,EAASD,MAC1BS,SAAQ,kBAAMN,GAAW,QAC3B,CAACV,IAEJE,QAAQC,IAAIE,GAEZ,IAAQY,EAASZ,EAATY,KAIR,OACE,gCACGR,IAAYA,GAAW,cAACS,EAAA,EAAD,IACvBD,GACC,6BACGA,EAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,qBAAIC,UAAWC,IAAEC,KAAjB,UACGH,EACC,qBACEC,UAAWC,IAAEE,IACbC,IAAG,UAZJ,mCAYI,OAAcL,GACjBM,IAAKR,IAGP,qBAAKG,UAAWC,IAAEE,IAAKC,IAAKE,EAAYD,IAAKR,IAG/C,oBAAGG,UAAWC,IAAEM,YAAhB,UACE,4BAAIV,IACJ,4CAAeC,UAbSF","file":"static/js/6.df02ad15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Cast_img__P5C6O\",\"item\":\"Cast_item__720iQ\",\"description\":\"Cast_description__3i4PU\"};","export default __webpack_public_path__ + \"static/media/default_img1.e57644d3.jpg\";","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport API from \"../../services/movies-api\";\r\nimport s from \"./Cast.module.css\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport defaultImg from \"../../image/default_img1.jpg\";\r\n\r\nfunction Cast() {\r\n  const { movieId } = useParams();\r\n  console.log(movieId);\r\n\r\n  console.log(movieId);\r\n  const [ackers, setAckers] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [spinner, setSpinner] = useState(false);\r\n  console.log(error);\r\n\r\n  useEffect(() => {\r\n    setSpinner(true);\r\n\r\n    API.fetchMovieCredits(movieId)\r\n      .then((ackers) => setAckers(ackers))\r\n      .catch((error) => setError(error))\r\n      .finally(() => setSpinner(false));\r\n  }, [movieId]);\r\n\r\n  console.log(ackers);\r\n\r\n  const { cast } = ackers;\r\n\r\n  const imgurl = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n  return (\r\n    <div>\r\n      {spinner && !spinner && <Spinner />}\r\n      {cast && (\r\n        <ul>\r\n          {cast.map(({ id, name, character, profile_path }) => (\r\n            <li className={s.item} key={id}>\r\n              {profile_path ? (\r\n                <img\r\n                  className={s.img}\r\n                  src={`${imgurl}${profile_path}`}\r\n                  alt={name}\r\n                />\r\n              ) : (\r\n                <img className={s.img} src={defaultImg} alt={name} />\r\n              )}\r\n\r\n              <p className={s.description}>\r\n                <p>{name}</p>\r\n                <p>Character: {character}</p>\r\n              </p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cast;\r\n"],"sourceRoot":""}